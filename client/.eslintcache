[{"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\index.js":"1","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\App.js":"2","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Landing.js":"3","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\auth\\Login.js":"5","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\auth\\Register.js":"6","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\store.js":"7","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\index.js":"8","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\alert.js":"9","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\type.js":"10","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\alert.js":"11","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\auth.js":"12","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\auth.js":"13","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\utils\\setAuthToken.js":"14","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\dashboard\\Dashboard.js":"15","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\routing\\PrivateRoute.js":"16","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\profile.js":"17","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\profile.js":"18","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Spinner.js":"19","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\dashboard\\DashboardAction.js":"20","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\profile-forms\\EditProfile.js":"22","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\table\\Table.js":"23","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\model\\Model.js":"24","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Alert.js":"25"},{"size":415,"mtime":1612520170004,"results":"26","hashOfConfig":"27"},{"size":2011,"mtime":1612552421506,"results":"28","hashOfConfig":"27"},{"size":1209,"mtime":1612550103627,"results":"29","hashOfConfig":"27"},{"size":1818,"mtime":1612552856485,"results":"30","hashOfConfig":"27"},{"size":2626,"mtime":1612249195185,"results":"31","hashOfConfig":"27"},{"size":3175,"mtime":1612175167310,"results":"32","hashOfConfig":"27"},{"size":385,"mtime":1612158692354,"results":"33","hashOfConfig":"27"},{"size":201,"mtime":1612189325366,"results":"34","hashOfConfig":"27"},{"size":415,"mtime":1612164182318,"results":"35","hashOfConfig":"27"},{"size":669,"mtime":1612362571452,"results":"36","hashOfConfig":"27"},{"size":403,"mtime":1612164048113,"results":"37","hashOfConfig":"27"},{"size":1053,"mtime":1612204914250,"results":"38","hashOfConfig":"27"},{"size":2279,"mtime":1612519255926,"results":"39","hashOfConfig":"27"},{"size":259,"mtime":1612168657306,"results":"40","hashOfConfig":"27"},{"size":2179,"mtime":1612520344942,"results":"41","hashOfConfig":"27"},{"size":615,"mtime":1612189059715,"results":"42","hashOfConfig":"27"},{"size":1060,"mtime":1612363019208,"results":"43","hashOfConfig":"27"},{"size":2936,"mtime":1612439342067,"results":"44","hashOfConfig":"27"},{"size":291,"mtime":1612196174372,"results":"45","hashOfConfig":"27"},{"size":386,"mtime":1612446067395,"results":"46","hashOfConfig":"27"},{"size":5460,"mtime":1612520576994,"results":"47","hashOfConfig":"27"},{"size":6629,"mtime":1612520589397,"results":"48","hashOfConfig":"27"},{"size":3161,"mtime":1612442776616,"results":"49","hashOfConfig":"27"},{"size":1936,"mtime":1612446791192,"results":"50","hashOfConfig":"27"},{"size":531,"mtime":1612552534920,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"83ot7l",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\index.js",[],["112","113"],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\App.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Landing.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\auth\\Login.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\auth\\Register.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\store.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\index.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\alert.js",["114"],"import {SET_ALERT , REMOVE_ALERT} from \"../actions/type\";\r\n\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload} = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state , payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\type.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\alert.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\auth.js",["115"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT, ACCOUNT_DELETED\r\n} from \"../actions/type\";\r\n\r\nconst initialState={\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    loading:true,\r\n    user:null\r\n};\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload} = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {...state,isAuthenticated: true,loading: false ,user: payload};\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{...state,...payload,isAuthenticated: true, loading: false };\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {...state,token:null,isAuthenticated: false,loading: false};\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\auth.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\utils\\setAuthToken.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\dashboard\\Dashboard.js",["116","117"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteAccount, getCurrentProfile } from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport DashboardActions from \"./DashboardAction\";\r\nimport Model from '../model/Model'\r\n\r\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, []);\r\n    return loading && profile === null\r\n        ? <Spinner />\r\n        : <Fragment>\r\n            <div className='container'>\r\n                <h1 className='large text-primary'>Dashboard</h1>\r\n                <p className='lead'>\r\n                    <i className='fas fa-user'></i>{' '}\r\n                Welcome {user && user.name}\r\n                </p>\r\n                {profile !== null\r\n                    ? <Fragment>\r\n                        <DashboardActions />\r\n                        {/* <Model/> */}\r\n                        <div className='my-2'>\r\n                            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                                <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>\r\n                        </div>\r\n                    </Fragment>\r\n                    : <Fragment>\r\n                        <p>You have not yet setup a profile, please add some info</p>\r\n                        <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n                            Create Profile\r\n                        </Link>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n};\r\n\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\reducers\\profile.js",["118"],"import {GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES} from \"../actions/type\";\r\n\r\nconst initialState = {\r\n    profile:null,\r\n    profiles:[],\r\n    loading:true,\r\n    error:{}\r\n};\r\n\r\nexport default function (state = initialState,action) {\r\n    const {type,payload}=action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:payload,\r\n                loading: false,\r\n                error:{}\r\n            };\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles:payload,\r\n                loading:false\r\n            };\r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return{\r\n                profile: null,\r\n                loading: false,\r\n                error: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\actions\\profile.js",["119"],"import axios from 'axios';\r\nimport {setAlert} from \"./alert\";\r\nimport {\r\n    CLEAR_PROFILE,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    ACCOUNT_DELETED\r\n} from \"./type\";\r\n\r\n//Get the current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    }catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({type:CLEAR_PROFILE});\r\n    try{\r\n        const res = await axios.get('api/profile');\r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data\r\n        })\r\n    }catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n\r\n//update a profile\r\nexport const createProfile = (formData,history,edit=false)=> async dispatch =>{\r\n    try{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.post('/api/profile',formData,config);\r\n\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert(edit? 'Profile updated' : 'Profile created','success'));\r\n        history.push('/dashboard');\r\n    }catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteProfile = (id) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.delete(`/api/profile/${id}`);\r\n\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n\r\n        dispatch(setAlert('Profile Deleted','success'))\r\n\r\n    }catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? This can NOT be undone')){\r\n        try{\r\n            const res = await axios.delete('/api/profile');\r\n\r\n            dispatch({type:CLEAR_PROFILE});\r\n            dispatch({type: ACCOUNT_DELETED});\r\n\r\n            dispatch(setAlert('your account has been deleted' , 'success'))\r\n        }catch (err) {\r\n            dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        }\r\n    }\r\n}","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Spinner.js",["120"],"import React, {Fragment} from 'react';\r\nimport spinner from './loader2.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{width:'200px',margin:'auto',display:'block'}}\r\n            alt='Loading....'\r\n        />\r\n    </Fragment>\r\n)","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\dashboard\\DashboardAction.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\profile-forms\\CreateProfile.js",["121"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../actions/profile\";\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nconst CreateProfile = ({ close, createProfile, history }) => {\r\n    const [formData, setformData] = useState({\r\n        mobileNo: '',\r\n        gender: 'male',\r\n        role: '',\r\n        skills: '',\r\n        email: '',\r\n        dob: ''\r\n    });\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n    const {\r\n        mobileNo,\r\n        gender,\r\n        role,\r\n        skills,\r\n        email,\r\n        dob\r\n    } = formData;\r\n\r\n    const onChange = (e) => setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0])\r\n    };\r\n\r\n    const onSelect = (e) => {\r\n        setformData({ ...formData, gender: e.target.value });\r\n    };\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history)\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container'>\r\n                <h1 className=\"large text-primary\">Create Profile</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n                <small>* = required field</small>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <select name=\"role\" value={role} onChange={e => onChange(e)}>\r\n                            <option value=\"0\">* Select Status</option>\r\n                            <option value=\"Admin\">Admin</option>\r\n                            <option value=\"User\">User</option>\r\n                        </select>\r\n                        <small className=\"form-text\"\r\n                        >Select whether you are a admin or user</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Mobile Number\" name=\"mobileNo\" value={mobileNo} onChange={e => onChange(e)} />\r\n                        <small className=\"form-text\"\r\n                        >Could be your own company or one you work for</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='male' onChange={e => onSelect(e)} checked={gender === 'male'} />\r\n                                {' '} Male\r\n                        </label>\r\n                        </div>\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='female' onChange={e => onSelect(e)} checked={gender === 'female'} />\r\n                                {' '} female\r\n                        </label>\r\n                        </div>\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='others' onChange={e => onSelect(e)} checked={gender === 'others'} />\r\n                                {''} others\r\n                        </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                        <small className=\"form-text\"\r\n                        >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                        <small className=\"form-text\"\r\n                        >Please Enter your Email address</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type='file' placeholder=\"resume\" name=\"file\" onChange={e => onFileChange(e)}></input>\r\n                        <small className=\"form-text\">Tell us a little about yourself</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type='date' placeholder=\"Date of birth\" name=\"dob\" value={dob} onChange={e => onChange(e)}></input>\r\n                        <small className=\"form-text\">please enter your date of birth</small>\r\n                    </div>\r\n\r\n\r\n                    <input onClick={close} type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                    <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\profile-forms\\EditProfile.js",["122","123","124"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nconst EditProfile = ({ close, createProfile, getCurrentProfile, profile: { profile, loading }, history }) => {\r\n    const [formData, setformData] = useState({\r\n        mobileNo: '',\r\n        gender: 'male',\r\n        role: '',\r\n        skills: '',\r\n        email: '',\r\n        resume: '',\r\n        dob: ''\r\n    });\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setformData({\r\n            mobileNo: loading || !profile.mobileNo ? '' : profile.mobileNo,\r\n            gender: loading || !profile.gender ? '' : profile.gender,\r\n            role: loading || !profile.role ? '' : profile.role,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            email: loading || !profile.email ? '' : profile.email,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            resume: loading || !profile.resume ? '' : profile.resume,\r\n            dob: loading || !profile.dob ? '' : profile.dob\r\n        })\r\n    }, [loading]);\r\n\r\n    const {\r\n        mobileNo,\r\n        gender,\r\n        role,\r\n        skills,\r\n        email,\r\n        dob\r\n    } = formData;\r\n\r\n    const onChange = (e) => setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0])\r\n        console.log(selectedFile)\r\n    };\r\n\r\n    const onSelect = (e) => {\r\n        setformData({ ...formData, gender: e.target.value });\r\n        console.log(gender)\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container'>\r\n                <h1 className=\"large text-primary\">\r\n                    Edit Your Profile\r\n                        </h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n                <small>* = required field</small>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <select name=\"role\" value={role} onChange={e => onChange(e)}>\r\n                            <option value=\"0\">* Select Status</option>\r\n                            <option value=\"Admin\">Admin</option>\r\n                            <option value=\"User\">User</option>\r\n                        </select>\r\n                        <small className=\"form-text\"\r\n                        >Select whether you are a admin or user</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Mobile Number\" name=\"mobileNo\" value={mobileNo} onChange={e => onChange(e)} />\r\n                        <small className=\"form-text\"\r\n                        >Could be your own company or one you work for</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='male' onChange={e => onSelect(e)} checked={gender === 'male'} />\r\n                                {' '} Male\r\n                    </label>\r\n                        </div>\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='female' onChange={e => onSelect(e)} checked={gender === 'female'} />\r\n                                {' '} female\r\n                        </label>\r\n                        </div>\r\n                        <div className='radio'>\r\n                            <label>\r\n                                <input type='radio' value='others' onChange={e => onSelect(e)} checked={gender === 'others'} />\r\n                                {''} others\r\n                        </label>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                        <small className=\"form-text\"\r\n                        >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                        <small className=\"form-text\"\r\n                        >Please Enter your Email address</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type='file' placeholder=\"resume\" name=\"file\" onChange={e => onFileChange(e)}></input>\r\n                        <small className=\"form-text\">Tell us a little about yourself</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type='date' placeholder=\"Date of birth\" name=\"dob\" value={dob} onChange={e => onChange(e)}></input>\r\n                        <small className=\"form-text\">please enter your date of birth</small>\r\n                    </div>\r\n\r\n\r\n\r\n                    <input onClick={close} type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                    <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\table\\Table.js",["125","126"],"import React, {Fragment,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfiles} from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport {deleteProfile} from \"../../actions/profile\";\r\n\r\n\r\nconst Table = ({getProfiles,deleteProfile, profile:{profile,profiles,loading}}) => {\r\n\r\n\r\n    useEffect(()=>{\r\n        getProfiles();\r\n    },[profile]);\r\n\r\n    // const profileData = profiles.length > 0 ?\r\n    //     (profiles.map(pro =>(\r\n    //             <td key={pro._id}>\r\n    //                 <td>{pro.mobileNo}</td>\r\n    //                 <td className='hide-sm'>{pro.role}</td>\r\n    //                 <td>\r\n    //                     <Moment format='YYYY/MM/DD'>{pro.dob}</Moment>\r\n    //                 </td>\r\n    //             </td>\r\n    //         ))):'';\r\n    //\r\n    // console.log(profileData);\r\n\r\n    return(\r\n        <Fragment>\r\n            {loading ? <Spinner/> : <Fragment>\r\n                <h2 className='my-2'>User Profiles</h2>\r\n                <table className='table'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th >MobileNo</th>\r\n                        <th className='hide-sm'>Gender</th>\r\n                        <th className='hide-sm'>Role</th>\r\n                        <th className='hide-sm'>Email</th>\r\n                        <th className='hide-sm'>Date of birth</th>\r\n                        <th className='hide-sm'>Skills</th>\r\n                        <th className='hide-sm'>button</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        profiles && profiles.length > 0 ? (profiles.map(pro =>(\r\n                            <tr key={pro._id}>\r\n                                <td>{pro.mobileNo}</td>\r\n                                <td className='hide-sm'>{pro.gender}</td>\r\n                                <td className='hide-sm'>{pro.role}</td>\r\n                                <td className='hide-sm'>{pro.email}</td>\r\n                                <td className='hide-sm'><Moment format='YYYY/MM/DD'>{pro.dob}</Moment></td>\r\n                                <td className='hide-sm'>{pro.skills.join(',')}</td>\r\n                                <td>\r\n                                    <button onClick={() => deleteProfile(pro._id)} className='btn btn-danger'>\r\n                                       Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))):(<td>no profile found</td>)\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </Fragment>}\r\n\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nTable.propTypes ={\r\n    deleteProfile : PropTypes.func.isRequired,\r\n    getProfiles : PropTypes.func.isRequired,\r\n    profile : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile : state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps,{getProfiles,deleteProfile})(Table)","D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\model\\Model.js",[],"D:\\Documents\\Interview tasks\\CAFS\\client\\src\\components\\layout\\Alert.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":1,"nodeType":"133","endLine":17,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":18,"column":1,"nodeType":"133","endLine":39,"endColumn":2},{"ruleId":"134","severity":1,"message":"135","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":13,"column":8,"nodeType":"140","endLine":13,"endColumn":10,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"132","line":10,"column":1,"nodeType":"133","endLine":42,"endColumn":2},{"ruleId":"134","severity":1,"message":"142","line":99,"column":19,"nodeType":"136","messageId":"137","endLine":99,"endColumn":22},{"ruleId":"131","severity":1,"message":"143","line":5,"column":1,"nodeType":"133","endLine":13,"endColumn":2},{"ruleId":"134","severity":1,"message":"144","line":17,"column":12,"nodeType":"136","messageId":"137","endLine":17,"endColumn":24},{"ruleId":"134","severity":1,"message":"145","line":20,"column":12,"nodeType":"136","messageId":"137","endLine":20,"endColumn":31},{"ruleId":"134","severity":1,"message":"146","line":20,"column":33,"nodeType":"136","messageId":"137","endLine":20,"endColumn":51},{"ruleId":"138","severity":1,"message":"147","line":35,"column":8,"nodeType":"140","endLine":35,"endColumn":17,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":4,"column":9,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"150","line":16,"column":7,"nodeType":"140","endLine":16,"endColumn":16,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Model' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["154"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'selectedFile' is assigned a value but never used.","'displaySocialInputs' is assigned a value but never used.","'toggleSocialInputs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.dob', 'profile.email', 'profile.gender', 'profile.mobileNo', 'profile.resume', 'profile.role', 'profile.skills', and 'profile.status'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["155"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"163","text":"164"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.dob, profile.email, profile.gender, profile.mobileNo, profile.resume, profile.role, profile.skills, profile.status]",{"range":"165","text":"166"},"Update the dependencies array to be: [getProfiles, profile]",{"range":"167","text":"168"},[548,550],"[getCurrentProfile]",[1385,1394],"[getCurrentProfile, loading, profile.dob, profile.email, profile.gender, profile.mobileNo, profile.resume, profile.role, profile.skills, profile.status]",[494,503],"[getProfiles, profile]"]